name: Release AppImage

on:
  push:
    tags:
      - 'v*'  # Trigger on any tag starting with 'v'
  workflow_dispatch:  # Manual triggers

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick-6.q16 appstream fuse libfuse2 \
          build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev \
          libreadline-dev libffi-dev libsqlite3-dev libbz2-dev \
          tk-dev v4l-utils ffmpeg \
          python3-tk tcl8.6-dev tk8.6-dev \
          patchelf
        sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
        sudo ln -s /usr/bin/convert /usr/local/bin/magick
        sudo modprobe fuse
        sudo chmod 666 /dev/fuse
        sudo chown root:$USER /dev/fuse

    - name: Get version from tag or file
      id: get_version
      run: |
        FILE_VERSION=$(grep -oP 'VERSION = "\K[^"]+' src/version.py)
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          if [ "$VERSION" != "$FILE_VERSION" ]; then
            echo "Error: Tag version ($VERSION) does not match version.py ($FILE_VERSION)"
            exit 1
          fi
        else
          VERSION=$FILE_VERSION
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Bundle dependencies in AppImage
      run: |
        chmod +x build/create-appimage.sh
        
        # Show system info
        echo "System Python info:"
        which python3
        python3 --version
        ldd $(which python3)
        
        # Run build script with debugging
        VERBOSE=1 ./build/create-appimage.sh
        
        # Verify AppDir structure
        echo "Checking AppDir structure:"
        ls -la build/AppDir/usr/bin/
        ls -la build/AppDir/usr/lib/
        
        # Test Python in AppDir
        echo "Testing Python in AppDir:"
        build/AppDir/usr/bin/python3 --version || true
        ldd build/AppDir/usr/bin/python3 || true
        
        # Validate AppStream metadata
        appstreamcli validate build/AppDir/usr/share/metainfo/io.github.sodomak.vidmask.metainfo.xml

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name == 'push' }}
      with:
        name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
        files: |
          vidmask-x86_64.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Artifact
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        name: vidmask-x86_64
        path: vidmask-x86_64.AppImage

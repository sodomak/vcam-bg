name: Release AppImage

on:
  push:
    tags:
      - 'v*'  # Trigger on any tag starting with 'v'
  workflow_dispatch:  # Manual triggers

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-venv imagemagick-6.q16 appstream fuse libfuse2
        sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
        sudo ln -s /usr/bin/convert /usr/local/bin/magick
        sudo modprobe fuse
        sudo chmod 666 /dev/fuse
        sudo chown root:$USER /dev/fuse

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Set up Python virtual environment and install dependencies
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install opencv-python-headless==4.8.1.78 mediapipe==0.10.9 numpy==1.24.3 pillow==10.2.0

    - name: Get version from tag or file
      id: get_version
      run: |
        FILE_VERSION=$(grep -oP 'VERSION = "\K[^"]+' src/version.py)
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          # Running from tag push
          VERSION=${GITHUB_REF#refs/tags/v}
          if [ "$VERSION" != "$FILE_VERSION" ]; then
            echo "Error: Tag version ($VERSION) does not match version.py ($FILE_VERSION)"
            exit 1
          fi
        else
          # Running manually
          VERSION=$FILE_VERSION
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create AppDir structure and copy virtual environment
      run: |
        mkdir -p build/AppDir/usr/lib/python  # Ensure all necessary directories exist
        mkdir -p build/AppDir/usr/share/metainfo/
        mkdir -p build/AppDir/usr/share/applications/
        # Copy the entire virtual environment to AppDir
        cp -r venv build/AppDir/usr/lib/python

    - name: Bundle dependencies in AppImage
      run: |
        source venv/bin/activate
        chmod +x build/create-appimage.sh
        ./build/create-appimage.sh
        appstreamcli validate build/AppDir/usr/share/metainfo/io.github.sodomak.vcam-bg.metainfo.xml

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
        files: |
          vcam-bg-x86_64.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
